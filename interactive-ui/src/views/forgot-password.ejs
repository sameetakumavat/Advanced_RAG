<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - Advanced RAG System</title>
    
    <!-- Favicon for branding -->
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>ü§ñ</text></svg>">
    
    <!-- Meta tags for SEO and social sharing -->
    <meta name="description" content="Reset your password for Advanced RAG System - AI-powered document analysis and question answering">
    <meta name="keywords" content="RAG, AI, password reset, forgot password, document analysis, machine learning">
    <meta property="og:title" content="Advanced RAG System - Reset Password">
    <meta property="og:description" content="Reset your password for the AI-powered document analysis platform">
    <meta property="og:type" content="website">
    
    <!-- Preconnect to external resources for performance -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    
    <!-- Main stylesheet -->
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <!-- Main container with centering -->
    <div class="container">
        <!-- Authentication card with glass morphism effect -->
        <div class="auth-card">
            <!-- Header section with branding -->
            <div class="auth-header">
                <h1>üîê Reset Password</h1>
                <p>Update your password to regain access to your account</p>
            </div>
            
            <!-- Password reset form -->
            <form class="auth-form" id="forgotPasswordForm" method="POST">
                <!-- Username input field -->
                <div class="form-group">
                    <label for="username">Username</label>
                    <input 
                        type="text" 
                        id="username" 
                        name="username" 
                        placeholder="Enter your username"
                        required
                        autocomplete="username"
                        spellcheck="false"
                    >
                </div>
                
                <!-- New password input field -->
                <div class="form-group">
                    <label for="new_password">New Password</label>
                    <input 
                        type="password" 
                        id="new_password" 
                        name="new_password" 
                        placeholder="Enter your new password"
                        required
                        autocomplete="new-password"
                        minlength="8"
                    >
                    <div class="password-tips" id="passwordTips" style="display: none;">
                        <div class="tip-header">Password should:</div>
                        <ul class="tip-list">
                            <li data-requirement="length">Be at least 8 characters long</li>
                            <li data-requirement="uppercase">Contain at least one uppercase letter</li>
                            <li data-requirement="lowercase">Contain at least one lowercase letter</li>
                            <li data-requirement="number">Contain at least one number</li>
                            <li data-requirement="special">Contain at least one special character (@$!%*?&)</li>
                        </ul>
                    </div>
                </div>
                
                <!-- Confirm password input field -->
                <div class="form-group">
                    <label for="confirm_password">Confirm Password</label>
                    <input 
                        type="password" 
                        id="confirm_password" 
                        name="confirm_password" 
                        placeholder="Confirm your new password"
                        required
                        autocomplete="new-password"
                        minlength="8"
                    >
                    <div class="password-match" id="passwordMatch" style="display: none;">
                        Passwords don't match
                    </div>
                </div>
                
                <!-- Reset password button -->
                <button type="submit" class="btn-primary" id="resetButton">
                    Update Password
                </button>
            </form>
            
            <!-- Navigation links to other auth pages -->
            <div class="auth-links">
                <a href="/login" class="auth-link">
                    üîô Remember your password? Sign in
                </a>
                <a href="/register" class="auth-link">
                    üÜï New user? Create an account
                </a>
            </div>
            
            <!-- Footer with branding -->
            <div class="auth-footer">
                <p>Advanced RAG System</p>
                <div class="tech-badge">
                    AI-Powered Document Analysis
                </div>
            </div>
        </div>
    </div>
    
    <!-- Interactive JavaScript -->
    <!-- Interactive JavaScript -->
    <script>
        // Password validation functions
        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.getElementById('new_password');
            const confirmPasswordInput = document.getElementById('confirm_password');
            const passwordTips = document.getElementById('passwordTips');
            const passwordMatch = document.getElementById('passwordMatch');
            const resetButton = document.getElementById('resetButton');
            
            // Password requirements
            const requirements = {
                length: /.{8,}/,
                uppercase: /[A-Z]/,
                lowercase: /[a-z]/,
                number: /[0-9]/,
                special: /[@$!%*?&]/
            };
            
            // Show password tips when user focuses on password field
            passwordInput.addEventListener('focus', function() {
                passwordTips.style.display = 'block';
            });
            
            // Validate password as user types
            passwordInput.addEventListener('input', function() {
                const password = passwordInput.value;
                
                // Check each requirement
                Object.keys(requirements).forEach(req => {
                    const reqElement = document.querySelector(`[data-requirement="${req}"]`);
                    if (requirements[req].test(password)) {
                        reqElement.classList.add('valid');
                    } else {
                        reqElement.classList.remove('valid');
                    }
                });
                
                // If confirm password has value, check matching
                if (confirmPasswordInput.value) {
                    checkPasswordsMatch();
                }
            });
            
            // Check password match
            function checkPasswordsMatch() {
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                
                if (confirmPassword) {
                    passwordMatch.style.display = 'block';
                    
                    if (password === confirmPassword) {
                        passwordMatch.textContent = 'Passwords match';
                        passwordMatch.classList.add('valid');
                    } else {
                        passwordMatch.textContent = 'Passwords don\'t match';
                        passwordMatch.classList.remove('valid');
                    }
                } else {
                    passwordMatch.style.display = 'none';
                }
            }
            
            // Check passwords match when typing in confirm field
            confirmPasswordInput.addEventListener('input', checkPasswordsMatch);
            
            // Hide password tips when user clicks outside
            document.addEventListener('click', function(event) {
                if (!event.target.closest('.form-group')) {
                    passwordTips.style.display = 'none';
                }
            });
            
            // Form submission validation
            document.getElementById('forgotPasswordForm').addEventListener('submit', function(event) {
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                
                // Check if all requirements are met
                let allRequirementsMet = true;
                Object.keys(requirements).forEach(req => {
                    if (!requirements[req].test(password)) {
                        allRequirementsMet = false;
                    }
                });
                
                // Check if passwords match
                if (!allRequirementsMet || password !== confirmPassword) {
                    event.preventDefault();
                    showToast('Please fix the password issues before submitting', 'error');
                    passwordTips.style.display = 'block';
                    return false;
                }
            });
        });
    
        // Simple toast function
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};
                color: white;
                padding: 12px 20px;
                border-radius: 8px;
                z-index: 10000;
                box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            `;
            toast.textContent = message;
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 5000);
        }

        function showMessage(message, type = 'info') {
            showToast(message, type);
        }
    </script>
    <script src="/js/auth.js"></script>
    
    <!-- Additional forgot password specific JavaScript -->
    <script>
        // Forgot password page specific functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Focus on username field when page loads
            const usernameField = document.getElementById('username');
            if (usernameField) {
                usernameField.focus();
            }
            
            // Add password strength checking for new password
            const newPasswordField = document.getElementById('new_password');
            newPasswordField.addEventListener('input', function() {
                checkNewPasswordStrength(this.value);
            });
            
            // Handle form submission
            const form = document.getElementById('forgotPasswordForm');
            form.addEventListener('submit', function(e) {
                console.log('üîê Password reset attempt initiated');
                
                // Additional validation
                const formData = new FormData(this);
                const data = Object.fromEntries(formData.entries());
                
                // Check for strong password
                if (!isPasswordStrong(data.new_password)) {
                    e.preventDefault();
                    showMessage('Please choose a stronger password (at least 6 characters)', 'error');
                    return;
                }
                
                // Show confirmation message
                showMessage('Updating your password...', 'info');
            });
            
            // Add username validation
            const username = document.getElementById('username');
            username.addEventListener('blur', function() {
                const value = this.value.trim();
                if (value.length > 0 && value.length < 3) {
                    showFieldError(this, 'Username must be at least 3 characters long');
                }
            });
        });
        
        // Password strength checker for new password
        function checkNewPasswordStrength(password) {
            const passwordField = document.getElementById('new_password');
            const strength = calculatePasswordStrength(password);
            
            // Remove existing strength indicator
            const existingIndicator = passwordField.parentNode.querySelector('.password-strength');
            if (existingIndicator) {
                existingIndicator.remove();
            }
            
            if (password.length > 0) {
                // Create strength indicator
                const strengthIndicator = document.createElement('div');
                strengthIndicator.className = 'password-strength';
                strengthIndicator.innerHTML = `
                    <div class="strength-bar">
                        <div class="strength-fill strength-${strength.level}"></div>
                    </div>
                    <div class="strength-text">${strength.text}</div>
                `;
                
                strengthIndicator.style.cssText = `
                    margin-top: 8px;
                    font-size: 12px;
                `;
                
                passwordField.parentNode.appendChild(strengthIndicator);
            }
        }
        
        // Calculate password strength (same as registration page)
        function calculatePasswordStrength(password) {
            let score = 0;
            
            if (password.length >= 6) score += 1;
            if (password.length >= 8) score += 1;
            if (/[a-z]/.test(password)) score += 1;
            if (/[A-Z]/.test(password)) score += 1;
            if (/[0-9]/.test(password)) score += 1;
            if (/[^A-Za-z0-9]/.test(password)) score += 1;
            
            if (score <= 2) return { level: 'weak', text: 'Weak password' };
            if (score <= 4) return { level: 'medium', text: 'Medium strength' };
            return { level: 'strong', text: 'Strong password' };
        }
        
        // Check if password is strong enough
        function isPasswordStrong(password) {
            return password.length >= 6;
        }
        
        // Security tips have been removed as they're now handled by the password tips UI
        
        // Add dynamic styles for password strength indicator (if not already added)
        if (!document.querySelector('#forgot-password-styles')) {
            const dynamicStyles = document.createElement('style');
            dynamicStyles.id = 'forgot-password-styles';
            dynamicStyles.textContent = `
                .strength-bar {
                    width: 100%;
                    height: 4px;
                    background: var(--border-color);
                    border-radius: 2px;
                    overflow: hidden;
                }
                
                .strength-fill {
                    height: 100%;
                    transition: all 0.3s ease;
                    border-radius: 2px;
                }
                
                .strength-weak { width: 33%; background: var(--danger-color); }
                .strength-medium { width: 66%; background: var(--accent-color); }
                .strength-strong { width: 100%; background: var(--secondary-color); }
                
                .strength-text {
                    margin-top: 4px;
                    color: var(--text-secondary);
                }
            `;
            document.head.appendChild(dynamicStyles);
        }
    </script>
</body>
</html>